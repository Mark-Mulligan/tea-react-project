// React
import { useState, type FormEvent, useEffect } from 'react';

// Next
import Head from 'next/head';
import Link from 'next/link';
import { useRouter } from 'next/router';

// axios
import axios from 'axios';

// MUI
import Container from '@mui/material/Container';
import Typography from '@mui/material/Typography';
import TextField from '@mui/material/TextField';
import Box from '@mui/material/Box';
import Button from '@mui/material/Button';
import Grid from '@mui/material/Grid';
import Card from '@mui/material/Card';
import CardContent from '@mui/material/CardContent';
import CardMedia from '@mui/material/CardMedia';
import CardActionArea from '@mui/material/CardActionArea';

// Types
import { type OMDBSearchResponse, type OMDBMovieSearchData } from '../customTypes/omdbApi';

// Utils
import { createQueryObject } from '@/utils/routing';

export default function Home() {
  const router = useRouter();

  const [searchText, setSearchText] = useState(router?.query?.q || '');
  const [searchResultCount, setSearchResultCount] = useState(0);
  const [searchResults, setSearchResults] = useState<OMDBMovieSearchData[]>([]);

  const handleSearchSubmit = async (e: FormEvent) => {
    e.preventDefault();
    await router.push({ pathname: '/', query: createQueryObject(router, 'q', searchText) }, undefined);
  };

  useEffect(() => {
    const getMovieSearch = async (search: string) => {
      try {
        const { data } = await axios.get<OMDBSearchResponse>(`/api/movies/search?q=${search}`);
        setSearchResultCount(Number(data.totalResults));
        setSearchResults(data.Search);
      } catch (err) {
        console.log(err);
      }
    };

    if (router.query.q && typeof router.query.q === 'string') {
      const search = router.query.q;
      getMovieSearch(search);
    }
  }, [router.query]);

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <Container sx={{ paddingTop: '2em', paddingBottom: '2rem' }}>
          <Typography variant="h1" align="center" sx={{ fontSize: '3rem', marginBottom: '1.5rem' }}>
            Search Movies
          </Typography>
          <Box component="form" sx={{ maxWidth: 500, margin: 'auto' }} onSubmit={handleSearchSubmit}>
            <TextField
              required
              fullWidth
              value={searchText}
              onChange={(e) => setSearchText(e.target.value)}
              label="Search"
            />
            <Box sx={{ textAlign: 'right', marginTop: '1rem', marginBottom: '2rem' }}>
              <Button variant="contained" type="submit">
                Search
              </Button>
            </Box>
          </Box>
          {searchResults.length > 0 && (
            <Grid container spacing={4}>
              {searchResults.map((result) => {
                return (
                  <Grid item md={4} sm={6} xs={12} key={result.imdbID}>
                    <Link href={`/movie/${result.imdbID}`} passHref>
                      <CardActionArea sx={{ height: '100%' }}>
                        <Card sx={{ height: '100%' }}>
                          <CardMedia
                            component="img"
                            height="140"
                            image={result.Poster}
                            alt={result.Title}
                            sx={{ backgroundPositon: 'top' }}
                          />
                          <CardContent sx={{ marginBottom: '3rem' }}>
                            <Typography gutterBottom variant="h5" component="div">
                              {result.Title}
                            </Typography>
                            <Typography variant="body2" color="text.secondary">
                              {result.Type} - {result.Year}
                            </Typography>
                            <Button size="small" color="primary" sx={{ marginTop: '1rem' }}>
                              View Details
                            </Button>
                          </CardContent>
                        </Card>
                      </CardActionArea>
                    </Link>
                  </Grid>
                );
              })}
            </Grid>
          )}
        </Container>
      </main>
    </>
  );
}
