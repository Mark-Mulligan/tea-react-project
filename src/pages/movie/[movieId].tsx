// Next
import { type NextPage, type GetStaticProps } from 'next';
import Head from 'next/head';

// axios
import axios from 'axios';

// MUI
import Container from '@mui/material/Container';
import Typography from '@mui/material/Typography';

// types
import { type MovieDetails } from '@/customTypes/omdbApi';

interface IProps {
  movieDetails: MovieDetails;
}

const MoviePage: NextPage<IProps> = ({ movieDetails }) => {
  console.log('movieDetails', movieDetails);
  return (
    <>
      <Head>
        <title>{movieDetails.Title}</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <Container sx={{ paddingTop: '2rem', paddingBottom: '2rem' }}>
          <Typography variant="h1" align="center" sx={{ fontSize: '3rem', marginBottom: '1.5rem' }}>
            {movieDetails.Title}
          </Typography>
        </Container>
      </main>
    </>
  );
};

export const getStaticProps: GetStaticProps = async (context) => {
  const movieId = context?.params?.movieId;

  if (typeof movieId !== 'string') {
    return {
      props: {
        movieDetails: null,
      }, // will be passed to the page component as props
    };
  }

  try {
    const { data } = await axios.get<MovieDetails>(
      `${process.env.OMDB_URL}?i=${movieId}&apikey=${process.env.OMDB_APIKEY}`,
    );

    return {
      props: {
        movieDetails: data,
      }, // will be passed to the page component as props
    };
  } catch (err) {
    return {
      props: {
        movieDetails: {},
      }, // will be passed to the page component as props
    };
  }
};

export async function getStaticPaths() {
  return {
    paths: [],
    fallback: 'blocking',
  };
}

export default MoviePage;
